class Cartas:
    figuras = ["trebol", "diamante", "corazon", "picas"]
    numeros = ["1","2","3","4","5","6","7","8","9","10",
               "J","Q","K"]
    color=["negro","rojo"]
    
    def __init_ (self, valor="", figura="",color=""):
        self.valor=valor
        self.figura=figura
        self.color=color 
#codigo que da todas las posibilidades de las cartas sin color
class Carta:
    
    figuras = ["trebol", "diamante", "corazon", "picas"]
    numeros = ["A","2","3","4","5","6","7","8","9","10",
               "J","Q","K"]
    
    def __init__(self, fig=0, num=0):
        self.palo = fig
        self.numero = num
        
    def __str__(self):
        figr=self.figuras[self.palo-1]
        nume=self.numeros[self.numero-1]
        msn="{0} de {1}".format(nume,figr)
        return msn
        class Baraja:
    
    def __init__(self):
        self.cartas =[]
        for fig in range(1,5):
            for num in range(1,14):
                carta = Carta(fig,num)
                self.cartas.append(carta)

    def __str__(self):
        msn=""
        for carta in self.cartas:
            msn += str(carta) + "\n"
        return msn
#---------------------------------------------------------------------------------------------------------------------------------------------------
#codigo de las posibles cartas que pueden haber
class Cartas:
    figuras = ["trebol", "picas","diamante", "corazon"]
    numeros = ["A","2","3","4","5","6","7","8","9","10",
               "J","Q","K"]
    colores=["negro","rojo"]
    
    def __init__(self, figura=0, numero=0, color=""):
        self.figura = figura
        self.numero = numero
        if self.figura ==0 or self.figura ==1:     #toma de la lista de figuras el 0 o el 1 que seria trebol o picas que son negras
            self.color= "negro"
        elif self.figura==2 or self.figura==3:     #lo mismo con diamante y picas que son rojas
            self.color="rojo"

    def __str__(self):
       return (f'{self.numeros[self.numero]} de {self.figuras[self.figura]}, color: {self.color}')  #lo que imprime


class Baraja:
    def __init__(self):
        self.baraja =[]
        for figura in range(4):
            for numero in range(13):
                carta = Cartas(figura, numero)
                self.baraja.append(carta)

    def __str__(self):
        msn = ''
        for carta in self.baraja:
            msn += str(carta)
            msn += '\n'
        return msn
baraja = Baraja()
print(baraja)
#---------------------------------------------------------------------------------------------------------------------------------------------------
#cartas con random que puede tomar boca arriba o abajo
import random


class Cartas:
    figuras = ["trebol", "picas","diamante", "corazon"]
    numeros = ["A","2","3","4","5","6","7","8","9","10",
               "J","Q","K"]
    colores=["negro","rojo"]
    
    def __init__(self, figura=0, numero=0, face="",color=""):
        self.figura = figura
        self.numero = numero
        self.face=face
        if self.figura ==0 or self.figura ==1:
            self.color= "negro"
        elif self.figura==2 or self.figura==3:
            self.color="rojo"

    def __str__(self):
       return (f'{self.numeros[self.numero]} de {self.figuras[self.figura]}, color: {self.color}, está {self.face}')


class Baraja:
    def __init__(self):
        self.baraja =[]
        self.baraja_arriba=[]
        for figura in range(4):
            for numero in range(13):   
                lado=random.choice(["boca_abajo", "boca_arriba"])
                if lado=="boca_arriba":
                    if len(self.baraja_arriba)<7:
                        carta = Cartas(figura, numero, lado)
                        self.baraja_arriba.append(carta)
                    else:
                        lado= "boca_abajo"
                        carta = Cartas(figura, numero, lado)
                        self.baraja.append(carta)
                else:
                    carta=Cartas(figura,numero,lado)
                    self.baraja.append(carta)

    def __str__(self):
        msn = ''
        for carta in self.baraja:
            msn += str(carta)
            msn += '\n'
        for arriba in self.baraja_arriba:
            msn += str(arriba)
            msn += '\n'
        return msn

baraja = Baraja()
print(baraja)
#-----------------------------------------------------------//------------------------------------------------------------------
#alineación de las cartas
import random

class Cartas:
    figuras = ["trebol", "picas","diamante", "corazon"]
    numeros = ["A","2","3","4","5","6","7","8","9","10",
               "J","Q","K"]
    colores=["negro","rojo"]
    
    def __init__(self, figura=0, numero=0, face="",color=""):
        self.figura = figura
        self.numero = numero
        self.face=face
        if self.figura ==0 or self.figura ==1:
            self.color= "negro"
        elif self.figura==2 or self.figura==3:
            self.color="rojo"

    def __str__(self):
       return (f'{self.numeros[self.numero]} de {self.figuras[self.figura]}, color: {self.color}, está {self.face}')


class Baraja:
    def __init__(self):
        self.baraja =[]
        self.baraja_arriba=[]
        for figura in range(4):
            for numero in range(13):   
                lado=random.choice(["boca abajo", "boca arriba"])
                if lado=="boca arriba":
                    if len(self.baraja_arriba)<7:
                        carta = Cartas(figura, numero, lado)
                        self.baraja_arriba.append(carta)
                    else:
                        lado= "boca abajo"
                        carta = Cartas(figura, numero, lado)
                        self.baraja.append(carta)
                else:
                    carta=Cartas(figura,numero,lado)
                    self.baraja.append(carta)

    def __str__(self):
        msn = ''
        for carta in self.baraja:
            msn += str(carta)
            msn += '\n'
        for arriba in self.baraja_arriba:
            msn += str(arriba)
            msn += '\n'
        for i in range(0, 9):
            for j in range(i-1):
                msn += ':D'
            msn += '\n'
        return msn

baraja = Baraja()
print(baraja)
#-----------------------------------------------------------//------------------------------------------------------------------
#comienzo de pygame, creación mesa y carta

import pygame
import sys
wn=pygame.display.set_mode((800,600))#longitudes de ventana
clock=pygame.time.Clock()
green=51,162,0
while True:
	for event in pygame.event.get():
		if event.type==pygame.QUIT:
			sys.exit()
	coordenada=pygame.mouse.get_pos()
	x=coordenada[0]
	y=coordenada[1] #x y y existen porque coordenada es una tupla
	wn.fill(green) #color de fondo
	pygame.draw.rect(wn,("white"),(x,y,60,80)) #ubicación y ancho/largo
	pygame.display.flip()
	clock.tick(60) 
